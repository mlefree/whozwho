name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      #- name: Run tests
      #  run: npm test
      #  env:
      #    NODE_ENV: test

      - name: Build app
        run: npm run build

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Push app directory to app branch
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="app.v$VERSION"

          # Create a temp directory and copy app contents there
          mkdir -p dist
          cp -r app dist
          cp package*.json dist/.
          cp .gitignore.app dist/.gitignore
          cd dist

          # Initialize new git repo with just app contents
          git init
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Try to fetch the existing app branch to preserve history
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/mlefree/whozwho.git"
          git checkout -b app
          git pull

          # Add all files from app directory
          git add .

          # Create commit with app files at root
          git commit -m "Update built app files - TypeScript compiled output [skip ci]" || echo "No changes to commit"

          # Push to app branch with app contents at root (without force flag to preserve history)
          git push --set-upstream origin app

          # Fetch all tags to check if our tag already exists
          git fetch --tags origin

          # Check if tag exists, create and push tag with the version if it doesn't
          # Tag is created on the app branch
          if ! git tag -l | grep -q "^$TAG_NAME$"; then
            git tag -a "$TAG_NAME" -m "Version $VERSION"
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/mlefree/whozwho.git" "$TAG_NAME"
            echo "Created and pushed tag $TAG_NAME on app branch"
          else
            echo "Tag $TAG_NAME already exists, skipping tag creation"
          fi

          # Return to the main repository directory
          cd ..
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag main branch with version
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="v$VERSION"

          # Fetch all tags to check if our tag already exists
          git fetch --tags origin

          # Check if tag exists, create and push tag with the version if it doesn't
          # Tag is created on the main branch
          if ! git tag -l | grep -q "^$TAG_NAME$"; then
            git tag -a "$TAG_NAME" -m "Version $VERSION"
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/mlefree/whozwho.git" "$TAG_NAME"
            echo "Created and pushed tag $TAG_NAME on main branch"
          else
            echo "Tag $TAG_NAME already exists, skipping tag creation"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
