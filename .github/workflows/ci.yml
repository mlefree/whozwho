name: CI

on:
  push:
    branches: [ sandbox ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm install
      - run: npm test
        env:
          NODE_ENV: test
      - run: npm run build

      - name: Push app directory to deployed-in-sandbox branch
        run: |
          # Extract version from package.json
          VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="app.v$VERSION"

          # Create a temp directory to copy app contents there
          mkdir -p disti
          cd disti

          # Fetch the existing app branch: we need to force if "deployed-in-sandbox" branch doesn't exist
          git init
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/mlefree/whozwho.git"
          git checkout -b deployed-in-sandbox
          git pull --set-upstream origin deployed-in-sandbox || echo "Branch deployed-in-sandbox doesn't exist yet, creating new branch"

          # Make changes
          rm -rf app
          cd ..
          cp -rf dist disti/app
          cp -f package*.json disti/.
          cp -f .gitignore disti/.
          cd disti
          ls -al

          # Commit changes
          git add .
          git commit -m "$VERSION pushed [skip ci]" || echo "No changes to commit"
          git push --set-upstream origin deployed-in-sandbox

          # Check if tag exists, create and push tag with the version if it doesn't
          # Tag is created on the app branch
          git fetch --tags origin
          if ! git tag -l | grep -q "^$TAG_NAME$"; then
            git tag -a "$TAG_NAME" -m "Version $VERSION"
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/mlefree/whozwho.git" "$TAG_NAME"
            echo "Created and pushed tag $TAG_NAME on app branch"
          else
            echo "Tag $TAG_NAME already exists, skipping tag creation"
          fi

          # Return to the main repository directory
          cd ..
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
